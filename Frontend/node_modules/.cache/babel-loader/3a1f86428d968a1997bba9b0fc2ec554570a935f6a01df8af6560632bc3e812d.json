{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ninja\\\\ECIMS\\\\Frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n\n  // When the app loads, check for an existing token in localStorage.\n  useEffect(() => {\n    const savedToken = localStorage.getItem('accessToken');\n    console.log(\"Token retrieved in App.js:\", savedToken);\n    if (savedToken) {\n      setToken(savedToken);\n    }\n  }, []);\n\n  // Logout function: clears tokens and resets state.\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    setToken(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: !token ? /*#__PURE__*/_jsxDEV(Login, {\n          setToken: setToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/dashboard\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: token ? /*#__PURE__*/_jsxDEV(Dashboard, {\n          token: token,\n          onLogout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 76\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SSLzquenZQzOMzU62DrezfOo2pU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Signup","Dashboard","jsxDEV","_jsxDEV","App","_s","token","setToken","savedToken","localStorage","getItem","console","log","logout","removeItem","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/Ninja/ECIMS/Frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport Login from './Login';\r\nimport Signup from './Signup';\r\nimport Dashboard from './Dashboard';\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(null);\r\n\r\n  // When the app loads, check for an existing token in localStorage.\r\n  useEffect(() => {\r\n    const savedToken = localStorage.getItem('accessToken');\r\n    console.log(\"Token retrieved in App.js:\", savedToken);\r\n    if (savedToken) {\r\n      setToken(savedToken);\r\n    }\r\n  }, []);\r\n\r\n  // Logout function: clears tokens and resets state.\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    setToken(null);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        {/* Login route: if token exists, redirect to Dashboard */}\r\n        <Route\r\n          path=\"/login\"\r\n          element={!token ? <Login setToken={setToken} /> : <Navigate to=\"/dashboard\" replace />}\r\n        />\r\n        {/* Signup route */}\r\n        <Route\r\n          path=\"/signup\"\r\n          element={<Signup />}\r\n        />\r\n        {/* Protected Dashboard route: only accessible if token exists */}\r\n        <Route\r\n          path=\"/dashboard\"\r\n          element={token ? <Dashboard token={token} onLogout={logout} /> : <Navigate to=\"/login\" replace />}\r\n        />\r\n        {/* Fallback route: redirect any unknown URL to /login */}\r\n        <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}